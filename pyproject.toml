[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "crossfilter"
version = "0.1.0"
description = "Interactive crossfilter application for geospatial and temporal data analysis"
authors = [
    {name = "Crossfilter Team"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "gpxpy>=1.5.0",
    "pandas>=2.0.0",
    "numpy<2",
    "h3>=3.7.0",
    "plotly>=5.17.0",
    "pydantic>=2.5.0",
    "jinja2>=3.1.0",
    "python-multipart>=0.0.6",
    "aiofiles>=23.2.1",
    "typer>=0.9.0",
    "requests>=2.31.0",
    "pandera>=0.17.0",
    "nbformat",
    "sqlalchemy>=2.0.41",
    "tqdm>=4.67.1",
    "msgpack-numpy",
    "numba>=0.56.0",
    "umap-learn>=0.5.9",
    "dogpile.cache>=1.2.0",
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "pillow>=9.0.0",
    "sentencepiece>=0.1.95",
    "protobuf>=3.20.0",
]

[project.optional-dependencies]
kepler = [
    "keplergl>=0.3.2",
]
dev = [
    "syrupy>=4.9.1",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-playwright>=0.4.0",
    "pytest-xdist>=3.3.0",
    "playwright>=1.40.0",
    "black>=23.9.0",
    "ruff>=0.1.0",
    "mypy>=1.6.0",
    "types-aiofiles>=23.2.0",
    "httpx",
    "ipykernel",
    "jupyter",
    "ipywidgets",
    "py-spy>=0.3.14",
]

[project.scripts]
crossfilter = "crossfilter.main:main"

[tool.hatch.build.targets.wheel]
packages = ["crossfilter"]

[tool.black]
line-length = 88
target-version = ['py39']

[tool.ruff]
line-length = 88
target-version = "py39"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long (handled by black)
    "C901", # too complex
    #"W0621", # redefined-outer-name
]

[tool.ruff.per-file-ignores]
"tests/*" = ["B011"]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_untyped_defs = true
warn_return_any = true
warn_unused_configs = true
no_implicit_optional = true

[[tool.mypy.overrides]]
module = [
    "gpxpy.*",
    "h3.*",
    "keplergl.*",
    "msgpack.*",
    "umap.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["."]
#python_files = ["test_*.py", "*_test.py"]
#python_classes = ["Test*"]
#python_functions = ["test_*"]
log_cli = true
log_cli_level = "INFO"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=crossfilter",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "-n=0",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end browser tests",
    "resource_intensive: marks tests that require significant computational resources like model downloads (deselect with '-m \"not resource_intensive\"')",
]

[tool.coverage.run]
source = ["crossfilter"]
omit = [
    "tests/*",
    "crossfilter/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
]
